{"version":3,"sources":["App.js","store/sagas/userSaga.js","store/sagas/jokeSaga.js","store/sagas/rootSage.js","store/UserStore.js","store/Store.js","index.js"],"names":["App","_useSelector","useSelector","state","user","name","age","joke","dispatch","useDispatch","react_default","a","createElement","Fragment","onClick","type","fetchUserName","changeAge","userSaga","getUserName","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","userName","_context2","call","put","payload","t0","console","log","_marked","_context3","delay","_marked2","_context4","takeEvery","_marked3","fetchJoke","jokeSaga","getJoke","value","jokeSaga_marked","takeLatest","jokeSaga_marked2","rootSaga","all","rootSage_marked","initState","UserReducer","length","undefined","action","objectSpread","sagaMiddleware","createSagaMiddleware","rootReducers","combineReducers","UserStore","Store","createStore","applyMiddleware","run","ReactDOM","render","es","store","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f53f7cf6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nfunction App() {\r\n  const { name, age, joke } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <h1>Redux Saga App</h1>\r\n      <h3>Name = {name}</h3>\r\n      <button onClick={() => dispatch({ type: \"UPDATE_NAME\" })}>\r\n        Fetch Name\r\n      </button>\r\n      <br /> <br />\r\n      <h3>Age = {age}</h3>\r\n      <button onClick={() => dispatch({ type: \"UPDATE_AGE\" })}>\r\n        Fetch Age\r\n      </button>\r\n      <h3>Joke = {joke}</h3>\r\n      <button onClick={() => dispatch({ type: \"GET_JOKE\" })}>Fetch Joke</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { put, takeEvery, delay, call } from \"redux-saga/effects\";\r\nconst userURL = \"https://jsonplaceholder.typicode.com/users\";\r\nconst getUserName = async () => {\r\n  const response = await fetch(userURL);\r\n  const result = await response.json();\r\n  return result[0].name;\r\n};\r\nfunction* fetchUserName() {\r\n  try {\r\n    const userName = yield call(getUserName);\r\n    yield put({ type: \"UPDATE_NAME_SUCCESS\", payload: userName });\r\n  } catch (error) {\r\n    console.log(\"err = \", error);\r\n  }\r\n}\r\n\r\nfunction* changeAge() {\r\n  try {\r\n    yield delay(2000);\r\n    yield put({ type: \"UPDATE_AGE_SUCCESS\", payload: 50 });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nfunction* userSaga() {\r\n  yield takeEvery(\"UPDATE_NAME\", fetchUserName);\r\n  yield takeEvery(\"UPDATE_AGE\", changeAge);\r\n}\r\n\r\nexport default userSaga;\r\n","import { put, call, takeLatest } from \"redux-saga/effects\";\r\nconst jokeURL = \"http://api.icndb.com/jokes/random?firstName=John&lastName=Doe\";\r\n\r\nconst getJoke = async () => {\r\n  const response = await fetch(jokeURL);\r\n  const result = await response.json();\r\n  return result.value.joke;\r\n};\r\n\r\nfunction* fetchJoke() {\r\n  try {\r\n    const joke = yield call(getJoke);\r\n    yield put({ type: \"GET_JOKE_SUCCESS\", payload: joke });\r\n  } catch (error) {\r\n    console.log(\"err = \", error);\r\n  }\r\n}\r\n\r\nfunction* jokeSaga() {\r\n  yield takeLatest(\"GET_JOKE\", fetchJoke);\r\n}\r\n\r\nexport default jokeSaga;\r\n","import { all, call } from \"@redux-saga/core/effects\";\r\nimport { jokeSaga, userSaga } from \".\";\r\n\r\nfunction* rootSaga() {\r\n  yield all([call(jokeSaga), call(userSaga)]);\r\n}\r\nexport default rootSaga;\r\n","const initState = {\r\n  name: \"Samim\",\r\n  age: 25,\r\n  joke: \"\",\r\n};\r\nconst UserReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_NAME_SUCCESS\":\r\n      return { ...state, name: action.payload };\r\n    case \"UPDATE_AGE_SUCCESS\":\r\n      return { ...state, age: action.payload };\r\n    case \"GET_JOKE_SUCCESS\":\r\n      return { ...state, joke: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default UserReducer;\r\n","import createSagaMiddleware from \"@redux-saga/core\";\r\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport rootSaga from \"./sagas/rootSage\";\r\nimport UserStore from \"./UserStore\";\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst rootReducers = combineReducers({\r\n  user: UserStore,\r\n});\r\nconst Store = createStore(rootReducers, applyMiddleware(sagaMiddleware));\r\nexport default Store;\r\n\r\n// then run the saga\r\nsagaMiddleware.run(rootSaga);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport Store from \"./store/Store\";\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}